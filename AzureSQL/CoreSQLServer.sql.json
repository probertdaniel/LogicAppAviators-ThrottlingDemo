{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "type": "string",
      "defaultValue": "Dev"
    },
    "locationName": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "locationShortName": {
      "type": "string",
      "defaultValue": "[tolower(take(replace(parameters('locationName'), ' ', ''), 3))]"
    },
    "instanceNumber": {
      "type": "string",
      "defaultValue": "01"
    },
    "azureSQLServerName": {
      "type": "string",
      "defaultValue": "[concat('sql', '-', uniqueString(resourceGroup().id), '-', if(equals(toLower(parameters('environment')), 'test'), 'tst', if(equals(toLower(parameters('environment')), 'production'), 'prd', toLower(parameters('environment')))), '-', 'core', '-', parameters('locationShortName'), '-', parameters('instanceNumber'))]"
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[concat('sto', uniqueString(resourceGroup().id), if(equals(toLower(parameters('environment')), 'test'), 'tst', if(equals(toLower(parameters('environment')), 'production'), 'prd', toLower(parameters('environment')))), parameters('locationShortName'), parameters('instanceNumber'))]"
    },
    "logAnalyticsLocationName": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location of the Log Analytics workspace (which may be different than Resource Group)."
      }
    },
    "logAnalyticsLocationShortName": {
      "type": "string",
      "defaultValue": "[tolower(take(replace(parameters('logAnalyticsLocationName'), ' ', ''), 3))]"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "defaultValue": "[concat('loga', '-', uniqueString(resourceGroup().id), '-', if(equals(toLower(parameters('environment')), 'test'), 'tst', if(equals(toLower(parameters('environment')), 'production'), 'prd', toLower(parameters('environment')))), '-', 'core', '-', parameters('logAnalyticsLocationShortName'), '-', parameters('instanceNumber'))]",
      "metadata": {
        "description": "Name of the Log Analytics workspace to connect to."
      }
    },
    "administratorLogin": {
      "type": "string"
    },
    "administratorLoginPassword": {
      "type": "securestring"
    },
    "administratorAADLogin": {
      "type": "securestring"
    },
    "administratorAADObjectId": {
      "type": "securestring"
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "Environment": "dev"
      },
      "metadata": {
        "description": "Tags for this resource."
      }
    }
  },
  "variables": {
    "uniqueRoleGuid": "[guid(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), variables('storageBlobContributor'), resourceId('Microsoft.Sql/servers', parameters('azureSQLServerName')))]",
    "storageBlobContributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
    "diagnosticSettingsName": "SQLSecurityAuditEvents_4f2cff92-33f0-471d-9b28-1edc1683a1b4"
  },
  "resources": [
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2020-11-01-preview",
      "name": "[parameters('azureSQLServerName')]",
      "location": "[parameters('locationName')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "version": "12.0",
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        //"administrators": {
        //  "administratorType": "ActiveDirectory",
        //  "login": "[parameters('administratorAADLogin')]",
        //  "sid": "[parameters('administratorAADObjectId')]",
        //  "tenantId": "[subscription().tenantId]"
        //}
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "resources": [
        {
          "type": "firewallRules",
          "apiVersion": "2014-04-01-preview",
          "name": "AllowAllWindowsAzureIps",
          "location": "[parameters('locationName')]",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', parameters('azureSQLServerName'))]"
          ],
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          }
        },
        {
          "type": "securityAlertPolicies",
          "apiVersion": "2017-03-01-preview",
          "name": "Default",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', parameters('azureSQLServerName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "emailAccountAdmins": true
          }
        },
        {
          "type": "vulnerabilityAssessments",
          "apiVersion": "2018-06-01-preview",
          "name": "Default",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('azureSQLServerName'))]",
            "[concat('Microsoft.Sql/servers/', parameters('azureSQLServerName'), '/securityAlertPolicies/Default')]"
          ],
          "properties": {
            "storageContainerPath": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').primaryEndpoints.blob, 'vulnerability-assessment')]",
            "storageAccountAccessKey": "",
            "recurringScans": {
              "isEnabled": true,
              "emailSubscriptionAdmins": true
            }
          }
        },
        {
          "type": "Microsoft.Sql/servers/auditingPolicies",
          "apiVersion": "2014-04-01",
          "name": "[concat(parameters('azureSQLServerName'), '/Default')]",
          "location": "East US",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', parameters('azureSQLServerName'))]"
          ],
          "properties": {
            "auditingState": "Disabled"
          }
        },
        {
          "type": "Microsoft.Sql/servers/auditingSettings",
          "apiVersion": "2021-11-01-preview",
          "name": "[concat(parameters('azureSQLServerName'), '/Default')]",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', parameters('azureSQLServerName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "retentionDays": 0,
            "auditActionsAndGroups": [
              "SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP",
              "FAILED_DATABASE_AUTHENTICATION_GROUP",
              "BATCH_COMPLETED_GROUP"
            ],
            "isAzureMonitorTargetEnabled": true,
            "isManagedIdentityInUse": false,
            "storageEndpoint": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').PrimaryEndpoints.Blob]",
            "storageAccountAccessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value]",
            "storageAccountSubscriptionId": "[subscription().subscriptionId]",
            "isStorageSecondaryKeyInUse": false
          }
        },
        {
          "type": "Microsoft.Sql/servers/extendedAuditingSettings",
          "apiVersion": "2021-11-01-preview",
          "name": "[concat(parameters('azureSQLServerName'), '/Default')]",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', parameters('azureSQLServerName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "retentionDays": 0,
            "auditActionsAndGroups": [
              "SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP",
              "FAILED_DATABASE_AUTHENTICATION_GROUP",
              "BATCH_COMPLETED_GROUP"
            ],
            "isAzureMonitorTargetEnabled": true,
            "isManagedIdentityInUse": false,
            "storageEndpoint": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').PrimaryEndpoints.Blob]",
            "storageAccountAccessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value]",
            "storageAccountSubscriptionId": "[subscription().subscriptionId]",
            "isStorageSecondaryKeyInUse": false
          }
        },
        {
          "type": "Microsoft.Sql/servers/devOpsAuditingSettings",
          "apiVersion": "2021-11-01-preview",
          "name": "[concat(parameters('azureSQLServerName'), '/Default')]",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', parameters('azureSQLServerName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "isAzureMonitorTargetEnabled": true,
            "storageEndpoint": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').PrimaryEndpoints.Blob]",
            "storageAccountAccessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value]",
            "storageAccountSubscriptionId": "[subscription().subscriptionId]",
            "isStorageSecondaryKeyInUse": false
          }
        }
      ]
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', parameters('azureSQLServerName'), 'master')]",
      "location": "[parameters('locationName')]",
      "properties": {},
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('azureSQLServerName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
      "apiVersion": "2018-09-01-preview",
      "name": "[concat(parameters('storageAccountName'), '/Microsoft.Authorization/', variables('uniqueRoleGuid') )]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('azureSQLServerName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('storageBlobContributor')]",
        "principalId": "[reference(resourceId('Microsoft.Sql/servers', parameters('azureSQLServerName')), '2018-06-01-preview', 'Full').identity.principalId]",
        "scope": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "principalType": "ServicePrincipal"
      }
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Sql/servers/{0}/databases/{1}', parameters('azureSQLServerName'), 'master')]",
      "name": "[variables('diagnosticSettingsName')]",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
        "logs": [
          {
            "category": "SQLSecurityAuditEvents",
            "enabled": true,
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            }
          },
          {
            "category": "DevOpsOperationsAudit",
            "enabled": true,
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', parameters('azureSQLServerName'), 'master')]"
      ]
    }
  ]
}